location = "C:\\Users\\serka\\Downloads\\bilgisayar mühendisliği\\Playing Tennis.txt"

import pandas as pd
import numpy as np
from sklearn import preprocessing
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

le = preprocessing.LabelEncoder()
ohe = preprocessing.OneHotEncoder()
lr = LinearRegression()

datas = pd.read_csv(location)

outlook = datas.iloc[:,0:1].values
outlook[:,0] = le.fit_transform(datas.iloc[:,0])
outlook = ohe.fit_transform(outlook).toarray()

windy = datas.iloc[:,3:4].values
windy[:,0] = le.fit_transform(datas.iloc[:,3:4])
windy = ohe.fit_transform(windy).toarray()
temperature = datas.iloc[:,1:2].values
humidity = datas.iloc[:,2:3].values

play = datas.iloc[:,-1:].values
play[:,-1] = le.fit_transform(datas.iloc[:,-1])

result = pd.DataFrame(data = outlook, index = range(14), columns = ["overcast", "rainy", "sunny"])
result2 = pd.DataFrame(data = temperature, index = range(14), columns = ["temperature"])
result3 = pd.DataFrame(data = humidity, index = range(14), columns = ["humidity"])
result4 = pd.DataFrame(data = windy[:,0], index = range(14), columns = ["windy"])
result5 = pd.DataFrame(data = play, index = range(14), columns = ["play"])
result6 = pd.concat([result, result2], axis = 1)
result7 = pd.concat([result4, result5], axis = 1)
result8 = pd.concat([result6, result7], axis = 1)

x_train, x_test, y_train, y_test = train_test_split(result8, humidity, test_size = 0.33, random_state = 0)
lr.fit(x_train, y_train)
y_pred = lr.predict(x_test)

import statsmodels.api as sm
X = np.append(arr = np.ones((14, 1)).astype(int), values = result8, axis = 1)
X_l = result8.iloc[:,[0, 1, 2, 3, 5]].values
X_l = np.array(X_l, dtype = float)
model = sm.OLS(humidity, X_l).fit()
print(model.summary())

left = result8.iloc[:,:4].values
right = result8.iloc[:,5:].values
result9 = pd.DataFrame(data = left, index = range(14))
result10 = pd.DataFrame(data = right, index = range(14))
result11 = pd.concat([result9, result10], axis = 1)

x_train, x_test, y_train, y_test = train_test_split(result11, humidity, test_size = 0.33, random_state = 0)
lr.fit(x_train, y_train)
y_pred = lr.predict(x_test)
